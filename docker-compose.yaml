services:

  user-service:
    build:
      dockerfile: docker/user-service/Dockerfile
      context: .
    container_name: go-service-template-user-service
    depends_on:
      postgresql:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - SQL_ADDRESS=postgresql:5432

  user-profile-service:
    build:
      dockerfile: docker/user-profile-service/Dockerfile
      context: .
    container_name: go-service-template-user-profile-service
    depends_on:
      user-service:
        condition: service_started
      postgresql:
        condition: service_healthy
    ports:
      - "8081:8080"
    env_file:
      - .env
    environment:
      - SQL_ADDRESS=postgresql:5432
      - USER_SERVICE_URL=http://user-service:8080

  message-handler-worker:
    build:
      dockerfile: docker/message-handler-worker/Dockerfile
      context: .
    container_name: go-service-template-message-handler-worker
    depends_on:
      user-service:
        condition: service_started
      postgresql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - SQL_ADDRESS=postgresql:5432
      - USER_SERVICE_URL=http://user-service:8080

  postgresql:
    image: postgres:16
    container_name: go-service-template-postgresql
    volumes:
      - postgresql-data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: go_service_template
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 1234
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "go_service_template" ]
      interval: 10s
      timeout: 3s
      retries: 6
    restart: unless-stopped

volumes:
  postgresql-data:
    name: go-service-template-postgresql-data